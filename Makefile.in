# Variable check
# CXXFLAGS = @CXXFLAGS@
# INCLUDEFLAGS = @INCLUDEFLAGS@
# WARNINGFLAGS = @WARNINGFLAGS@
# STATICLIBS = @STATICLIBS@
# LIBS = @LIBS@
# LDFLAGS = @LDFLAGS@
# PETSC_DIR = @PETSC_DIR@
# SLEPC_DIR = @SLEPC_DIR@
# PETSC_ARCH_REAL = @PETSC_ARCH_REAL@
# PETSC_ARCH_COMPLEX = @PETSC_ARCH_COMPLEX@
# PETSC_INCLUDE_FILE_GENERIC = @PETSC_INCLUDE_FILE_GENERIC@
# SLEPC_INCLUDE_FILE_GENERIC = @SLEPC_INCLUDE_FILE_GENERIC@

parts=common units atmosphere modes libpe libbroadband modess wmod modbb epade_pe gfpe
build-parts=$(addsuffix -build, $(parts))
clean-parts=$(addsuffix -clean, $(parts))
test-parts=$(addsuffix -test, $(parts))

# Build everything
all: clean $(build-parts)

# NCPA Common Utility Library
common-build:
	#	$(MAKE) -C src/common all PETSC_ARCH=@PETSC_ARCH_REAL@ PETSC_DIR=@PETSC_DIR@ SLEPC_DIR=@SLEPC_DIR@
	$(MAKE) -C src/common all
	cp src/common/include/*.h src/include/
	cp src/common/lib/libncpacommon.a lib/
	
common-clean:
	-$(MAKE) -C src/common clean
	-rm lib/libncpacommon.a
	
common-test:
	$(MAKE) -C src/common/test test

# NCPA Units library
units-build:
	#	$(MAKE) -C src/units all PETSC_ARCH=@PETSC_ARCH_REAL@ PETSC_DIR=@PETSC_DIR@ SLEPC_DIR=@SLEPC_DIR@
	$(MAKE) -C src/units all
	cp src/units/include/*.h src/include/
	cp src/units/lib/libncpaunits.a lib/
	
units-clean:
	-$(MAKE) -C src/units clean
	-rm lib/libncpaunits.a
	
units-test:
	$(MAKE) -C src/units/test test

# NCPA Atmosphere library
atmosphere-build:
	#	$(MAKE) -C src/atmosphere all PETSC_ARCH=@PETSC_ARCH_REAL@ PETSC_DIR=@PETSC_DIR@ SLEPC_DIR=@SLEPC_DIR@
	$(MAKE) -C src/atmosphere all
	cp src/atmosphere/include/*.h src/include/
	cp src/atmosphere/lib/libncpaatmosphere.a lib/
	
atmosphere-clean:
	-$(MAKE) -C src/atmosphere clean
	-rm lib/libncpaatmosphere.a

atmosphere-test:
	$(MAKE) -C src/atmosphere/test test
	

modes:
	$(MAKE) -C src/modes all PETSC_ARCH=@PETSC_ARCH_REAL@ PETSC_DIR=@PETSC_DIR@ SLEPC_DIR=@SLEPC_DIR@
	cp src/modes/include/*.h src/include/
	cp src/modes/lib/libncpamodes.a lib/

modes-clean:
	-$(MAKE) -C src/modes clean  PETSC_ARCH=@PETSC_ARCH_REAL@ PETSC_DIR=@PETSC_DIR@ SLEPC_DIR=@SLEPC_DIR@
	-rm lib/libncpamodes.a

modes-test:
	$(MAKE) -C src/libmodes/test test

libbroadband:
	$(MAKE) -C src/libbroadband all PETSC_ARCH=@PETSC_ARCH_REAL@ PETSC_DIR=@PETSC_DIR@ SLEPC_DIR=@SLEPC_DIR@

libpe:
	$(MAKE) -C src/libpe all PETSC_ARCH=@PETSC_ARCH_COMPLEX@ PETSC_DIR=@PETSC_DIR@ SLEPC_DIR=@SLEPC_DIR@


# Normal modes, single frequency, effective sound speed approximation
modess:
	$(MAKE) -C src/modess all PETSC_ARCH=@PETSC_ARCH_REAL@ PETSC_DIR=@PETSC_DIR@ SLEPC_DIR=@SLEPC_DIR@

# Normal modes, broadband
modbb:
	$(MAKE) -C src/modbb all PETSC_ARCH=@PETSC_ARCH_REAL@ PETSC_DIR=@PETSC_DIR@ SLEPC_DIR=@SLEPC_DIR@


# High-angle high-mach parabolic equation
epade_pe:
	$(MAKE) -C src/epade_pe all PETSC_ARCH=@PETSC_ARCH_COMPLEX@ PETSC_DIR=@PETSC_DIR@ SLEPC_DIR=@SLEPC_DIR@

# Green's function parabolic equation
gfpe:
	$(MAKE) -C src/gfpe all PETSC_ARCH=@PETSC_ARCH_COMPLEX@ PETSC_DIR=@PETSC_DIR@ SLEPC_DIR=@SLEPC_DIR@

# Wide-angle high-mach number normal modes, single frequency
wmod:
	$(MAKE) -C src/wmod all PETSC_ARCH=@PETSC_ARCH_REAL@ PETSC_DIR=@PETSC_DIR@ SLEPC_DIR=@SLEPC_DIR@
	

# clean everything up
clean: $(clean-parts)
#	-$(MAKE) -C src/units clean
	-$(MAKE) -C src/libbroadband clean  PETSC_ARCH=@PETSC_ARCH_REAL@ PETSC_DIR=@PETSC_DIR@ SLEPC_DIR=@SLEPC_DIR@
	-$(MAKE) -C src/libpe clean  PETSC_ARCH=@PETSC_ARCH_COMPLEX@ PETSC_DIR=@PETSC_DIR@ SLEPC_DIR=@SLEPC_DIR@
	-$(MAKE) -C src/modess clean  PETSC_ARCH=@PETSC_ARCH_REAL@ PETSC_DIR=@PETSC_DIR@ SLEPC_DIR=@SLEPC_DIR@
	-$(MAKE) -C src/modbb clean  PETSC_ARCH=@PETSC_ARCH_REAL@ PETSC_DIR=@PETSC_DIR@ SLEPC_DIR=@SLEPC_DIR@
	-$(MAKE) -C src/epade_pe clean  PETSC_ARCH=@PETSC_ARCH_REAL@ PETSC_DIR=@PETSC_DIR@ SLEPC_DIR=@SLEPC_DIR@
	-$(MAKE) -C src/wmod clean  PETSC_ARCH=@PETSC_ARCH_REAL@ PETSC_DIR=@PETSC_DIR@ SLEPC_DIR=@SLEPC_DIR@
	-rm bin/ModBB  bin/Modess  bin/ePape  bin/WMod lib/libatmosphere.a \
	lib/libmodes.a lib/libbroadband.a lib/libpe.a \
	src/include/*.h

test: $(test-parts)

.PHONY:  $(build-parts) $(clean-parts) clean 
